plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.maven.publish)
}

kotlin {
    jvmToolchain(17)
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

android {
    defaultConfig {
        compileSdk = 34
        minSdkVersion 24
        targetSdkVersion 35
        ndkVersion = "28.1.13356709"

        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        externalNativeBuild {
            cmake { cppFlags "" }
        }
    }
    externalNativeBuild {
        cmake { path "src/main/cpp/CMakeLists.txt" }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'jp.co.cyberagent.android.gpuimage'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'gpuimage'
    bintrayUserOrg = 'cats-oss'
    publishedGroupId = 'jp.co.cyberagent.android'
    libraryName = 'gpuimage'
    artifact = 'gpuimage'
    libraryDescription = 'Image filters for Android with OpenGL (based on GPUImage for iOS)'
    siteUrl = 'https://github.com/cats-oss/android-gpuimage'
    gitUrl = 'https://github.com/cats-oss/android-gpuimage.git'
    issueUrl = 'https://github.com/cats-oss/android-gpuimage/issues'
    libraryVersion = "2.1.0"
    developerId = 'cats'
    developerName = 'CATS'
    developerEmail = 'dadadada.chop@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'jp.co.cyberagent.android'
            artifactId = 'gpuimage'
            version = '2.2.0'

            afterEvaluate {
                from components.release
            }
        }
    }
}
